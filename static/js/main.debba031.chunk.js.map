{"version":3,"sources":["utils/ThemeProvider.js","components/Header.js","utils/CountriesAPI.js","components/CountryThumbnail.js","utils/SearchProvider.js","components/CountryList.js","components/Search.js","pages/HomePage.js","pages/CountryPage.js","pages/NotFoundPage.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeDark","setThemeDark","countBfrTrns","useRef","useEffect","localStorage","getItem","JSON","parse","setItem","current","transitions","document","getElementById","classList","remove","theme","Provider","value","className","Header","darkTheme","useContext","to","onClick","getCountryData","a","code","url","toUpperCase","fetch","then","response","ok","json","console","log","status","catch","error","data","CountryThumbnail","country","src","flag","alt","name","population","toString","replace","region","capital","SearchContext","SearchProvider","searchInput","setSearchInput","search","filterInput","setFilterInput","CountryList","countriesUnfiltered","countries","setCountries","isLoading","setIsLoading","allCountry","allCountryCleaned","map","alpha3Code","stringify","tempCountries","filter","c","toLowerCase","includes","length","options","label","Search","type","id","placeholder","onChange","e","target","HomePage","CountryPage","useParams","history","useHistory","setCountry","topLevelDomain","setTopLevelDomain","currencies","setCurrencies","languages","setLanguages","borders","setBorders","isCountry","setIsCountry","oneCountry","tempCurrency","templanguage","countryCleaned","nativeName","subregion","forEach","i","goBack","subRegion","NotFoundPage","App","path","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.debba031.chunk.js","sourcesContent":["import {createContext, useEffect, useState, useRef} from 'react';\r\n\r\nexport const ThemeContext = createContext(null);\r\n\r\nexport const ThemeProvider = ({children}) => {\r\n\r\n    const [themeDark, setThemeDark] = useState(false);\r\n    const countBfrTrns= useRef(0)\r\n\r\n    // When the app is launch we check is a theme was previously selected and save in local storage\r\n    useEffect(() => {\r\n        if(localStorage.getItem('themeDark')){\r\n            setThemeDark(JSON.parse(localStorage.getItem('themeDark')));\r\n        }else{\r\n            localStorage.setItem('themeDark', false);\r\n        }\r\n    }, []);    \r\n\r\n    // If theme is updated we save in local storage\r\n    useEffect(() => {\r\n        localStorage.setItem('themeDark', themeDark);\r\n        if(countBfrTrns.current === 2 ){\r\n            transitions();\r\n        }\r\n         countBfrTrns.current+=1;\r\n    }, [themeDark]);\r\n\r\n    const transitions = () => {\r\n        let x = document.getElementById('root');\r\n         x.classList.remove(\"no-transition\");\r\n    }\r\n    const theme = {themeDark, setThemeDark};\r\n    \r\n    return (\r\n        <ThemeContext.Provider value={theme}>\r\n            <div className={`App ${theme.themeDark ? \"dark\" : \"light\"}`}>    \r\n                {children}   \r\n            </div>\r\n        </ThemeContext.Provider>\r\n    );\r\n}\r\n\r\nexport default ThemeProvider;","import React, {useContext} from 'react'\r\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\r\nimport NightsStayOutlinedIcon from '@material-ui/icons/NightsStayOutlined';\r\nimport {ThemeContext} from '../utils/ThemeProvider';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nfunction Header({ darkTheme }) {\r\n       // console.log( \"Header\", darkTheme);\r\n    const theme = useContext(ThemeContext);\r\n\r\n    const toggleTheme = () => {\r\n        theme.setThemeDark(!theme.themeDark);\r\n    }\r\n\r\n    return (\r\n        <header> \r\n            <div className=\"container\">\r\n                <Link to='/' className=\"header-title\">Where in the world ?</Link>\r\n                <div className=\"theme-toggle\" onClick={toggleTheme}>\r\n                    {theme.themeDark ? (\r\n                        <><NightsStayIcon /> <span> Light Mode</span></>\r\n                    ) : (\r\n                        <><NightsStayOutlinedIcon /> <span> Dark Mode </span></>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const getCountryData = async (code = 'all') => {\r\n    let url = '';\r\n    try{\r\n        // If there is no code passed around fetch all else fetch the country with the corresponding code\r\n        if (code === 'all'){\r\n            url = 'https://restcountries.eu/rest/v2/all';\r\n        }else{\r\n            url = 'https://restcountries.eu/rest/v2/alpha/' + code.toUpperCase();\r\n        }        \r\n        const data = await fetch(url)\r\n        .then(response => {\r\n            if (response.ok){\r\n                //console.log(\"Fetch Resolved ! Status : \", response.status);\r\n                return response.json();\r\n            }else{\r\n                console.log(\"Fetch Resolved but response not ok ! Status : \", response.status);\r\n            }\r\n        })\r\n        .then(json => json)\r\n        .catch((error) => {\r\n            console.log(\"Error on fetch all countries : \", error);\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        console.log('Global Error on getCountryData() : ', error);\r\n    }\r\n}\r\n\r\nexport default getCountryData;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction CountryThumbnail({country}) {\r\n    return (     \r\n        <>   \r\n            <div className=\"country-thumbnail\">\r\n                <Link to={`/${country.code}`} className=\"country-link\">\r\n                    <img src={`${country.flag}`} alt=\"USA\" className=\"thumbnail-image\"/>\r\n                    <div className=\"thumbnail-detail\">\r\n                        <h3 className=\"thumbnail-title\">{country.name}</h3>\r\n                        <p>Population : <span>{country.population?.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</span> </p>\r\n                        <p>Region : <span>{country.region}</span></p>\r\n                        <p>Capital : <span>{country.capital}</span> </p>                    \r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CountryThumbnail\r\n","import {createContext, useState} from 'react';\r\n\r\nexport const SearchContext = createContext(null)\r\nfunction SearchProvider({children}) {\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [filterInput, setFilterInput] = useState('');\r\n    const search = {searchInput, setSearchInput, filterInput, setFilterInput};\r\n    return (\r\n        <SearchContext.Provider value={search}>\r\n            {children}\r\n        </SearchContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SearchProvider\r\n","import React, {useState, useEffect, useRef, useContext} from 'react';\r\nimport getCountryData from '../utils/CountriesAPI';\r\nimport CountryThumbnail from '../components/CountryThumbnail';\r\nimport {SearchContext} from '../utils/SearchProvider';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\n\r\nfunction CountryList() {\r\n    let countriesUnfiltered = useRef([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const {searchInput, filterInput} = useContext(SearchContext);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {   \r\n        if(localStorage.getItem('countries')){\r\n            countriesUnfiltered.current = [...JSON.parse(localStorage.getItem('countries'))];\r\n            setCountries(JSON.parse(localStorage.getItem('countries')));\r\n            setIsLoading(false);\r\n        } else{\r\n            getCountryData()\r\n            .then(allCountry => {\r\n                const allCountryCleaned = allCountry.map( country => {\r\n                    const tempCountry = {\r\n                        'code' : country.alpha3Code,\r\n                        'name' : country.name,\r\n                        'population' : country.population,\r\n                        'region' : country.region,\r\n                        'capital': country.capital,\r\n                        'flag' : country.flag\r\n                    };\r\n                    return tempCountry;\r\n                });\r\n                countriesUnfiltered.current = [...allCountryCleaned];\r\n                setCountries(allCountryCleaned);\r\n                localStorage.setItem('countries', JSON.stringify(allCountryCleaned));\r\n                setIsLoading(false);\r\n    \r\n            });\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        \r\n            let tempCountries = countriesUnfiltered.current.filter( c => {\r\n                if (c.name.toLowerCase().includes(searchInput.toLowerCase())) {\r\n                    if(filterInput === '' || filterInput ==='All'){\r\n                        return true;\r\n                    }else{\r\n                        if(c.region === filterInput){\r\n                            return true;\r\n                        }else{\r\n                            return false;\r\n                        }\r\n                    }\r\n                }else {\r\n                    return false;\r\n                }\r\n            })\r\n            setCountries(tempCountries);\r\n\r\n    }, [searchInput, filterInput]);\r\n    \r\n    return (\r\n        <div className=\"country-list\">\r\n            {   isLoading ? \r\n                    <div className=\"is-loading\"><LoopIcon/> </div>               \r\n                    :\r\n                    countries.length === 0 ? <div className=\"no-country\"> '👩🏻‍💻 Try again. You might find it 👨🏻‍💻'</div> : countries?.map(country => (<CountryThumbnail  country={country} key={country.code}/>))\r\n            }\r\n        </div>                   \r\n        \r\n    )\r\n}\r\n\r\nexport default CountryList\r\n","import React, {useContext} from 'react';\r\nimport Select from 'react-select';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { SearchContext } from '../utils/SearchProvider';\r\n\r\nconst options = [\r\n    {value: 'All', label: 'All'},\r\n    {value: 'Africa', label: 'Africa'},\r\n    {value: 'Americas', label: 'Americas'},\r\n    {value: 'Asia', label: 'Asia'},\r\n    {value: 'Europe', label: 'Europe'},\r\n    {value: 'Oceania', label: 'Oceania'},\r\n];\r\n\r\nfunction Search() {\r\n    const {searchInput, setSearchInput, setFilterInput} = useContext(SearchContext);\r\n    return (\r\n        <div className=\"search-wrapper\">\r\n\r\n            <div className=\"search-input\">\r\n                <SearchIcon />\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"search\" \r\n                    name=\"search\" \r\n                    placeholder=\"Search for a country ...\" \r\n                    value ={searchInput}\r\n                    onChange={e => setSearchInput(e.target.value)}\r\n                />          \r\n            </div>\r\n            <div className=\"search-filter\">          \r\n                <Select \r\n                    options={options} \r\n                    placeholder=\"Filter by Region\"\r\n                    onChange={e => setFilterInput(e.value)} \r\n                />   \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\r\nimport CountryList from '../components/CountryList';\r\nimport Search from '../components/Search';\r\nimport SearchProvider from '../utils/SearchProvider';\r\n\r\nfunction HomePage() {\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"container\">\r\n                <SearchProvider>\r\n                    <Search />\r\n                    <CountryList/>\r\n                </SearchProvider>\r\n            </div>            \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React, {useState, useEffect}  from 'react';\r\nimport {Link, useParams, useHistory} from 'react-router-dom';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport getCountryData from '../utils/CountriesAPI';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\n\r\nfunction CountryPage() {\r\n    const {code} = useParams();\r\n    const history = useHistory();\r\n\r\n    const [country, setCountry] = useState([]);\r\n    const [topLevelDomain, setTopLevelDomain] = useState([]);\r\n    const [currencies, setCurrencies] = useState('');\r\n    const [languages, setLanguages] = useState('');\r\n    const [borders, setBorders] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isCountry, setIsCountry] = useState(true);\r\n    \r\n    useEffect(() => {    \r\n        getCountryData(code)\r\n        .then(oneCountry => {\r\n            try {\r\n                let tempCurrency = '';\r\n                let templanguage = '';\r\n                const countryCleaned ={\r\n                        'code' : oneCountry.alpha3Code,\r\n                        'name' : oneCountry.name,\r\n                        'population' : oneCountry.population,\r\n                        'region' : oneCountry.region,\r\n                        'capital': oneCountry.capital,\r\n                        'flag' : oneCountry.flag,\r\n                        'nativeName' : oneCountry.nativeName,\r\n                        'subRegion' : oneCountry.subregion,\r\n                    }; \r\n                oneCountry.currencies?.forEach((e,i) => {if(i > 0){tempCurrency += ', '; } tempCurrency += e.name;});            \r\n                oneCountry.languages?.forEach((e,i) => {if (i > 0){templanguage += ', '; } templanguage += e.name;});\r\n                 \r\n                setTopLevelDomain(oneCountry.topLevelDomain?.toString());\r\n                setBorders(oneCountry.borders);\r\n                setCurrencies(tempCurrency);\r\n                setLanguages(templanguage);\r\n                setCountry(countryCleaned);\r\n                setIsLoading(false);\r\n            }catch{\r\n                setIsLoading(false);\r\n                setIsCountry(false);\r\n            }\r\n        });\r\n    }, [code]);\r\n    \r\n    return (\r\n        <main>\r\n            <div className='container'>\r\n                <div className='btn-container'>\r\n                    <button onClick={() => {history.goBack()}} className='btn-previous'><ArrowBackIcon /> Back</button>\r\n                </div>\r\n                {isLoading ? \r\n                    <div className=\"is-loading\"><LoopIcon/> </div>               \r\n                    :\r\n                    <div className='country-wrapper'>\r\n                        { !isCountry ? \r\n                        <div className=\"no-country\">👻 This country is a myth. 👽</div>\r\n                        :\r\n                        <>\r\n                            <div className='country-image'>\r\n                                <img src={`${country.flag}`} alt='France' />\r\n                            </div>\r\n                            <div className='country-details'>\r\n                            <h2 className='country-title'>{country.name}</h2>\r\n                            <div className='country-infos'>\r\n                                <div className=\"info-first\">\r\n                                    <p >Native Name : <span>{country.nativeName}</span> <br /> </p>\r\n                                    <p >Population : <span>{country.population?.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</span> <br /></p>\r\n                                    <p >Region : <span>{country.region}</span> <br /></p>\r\n                                    <p >Sub Region : <span>{country.subRegion}</span> <br /></p>\r\n                                    <p >Capital : <span>{country.capital}</span> <br /></p>\r\n                                </div>\r\n                                <div className=\"info-second\">\r\n                                    <p >Top Level Domain : <span> {topLevelDomain}</span> <br /> </p>\r\n                                    <p >Currencies:<span> {currencies}</span><br /> </p>\r\n                                    <p >Languages:<span> {languages}</span>  <br /></p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='country-borders'>\r\n                                <p> Border Countries : </p>\r\n                                <div className=\"link-list\">\r\n                                    { \r\n                                        borders?.map((e,i) => (<Link className='country-link' key={i} to={`/${e}`} >{e}</Link>))\r\n                                    }  \r\n                                </div>\r\n                                \r\n                            </div> \r\n                        </div>\r\n                        </>\r\n                        }\r\n                    </div>   \r\n                }         \r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default CountryPage\r\n","import React from 'react';;\r\n\r\nfunction NotFoundPage() {\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"container\">\r\n                <div className=\"no-country\">☠️ Somebody is lost in no man's land. ☠️</div>\r\n            </div>            \r\n        </main>\r\n    )\r\n}\r\nexport default NotFoundPage\r\n","import './assets/css/App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport CountryPage from './pages/CountryPage';\nimport ThemeProvider from './utils/ThemeProvider';\nimport NotFoundPage from './pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <ThemeProvider>    \n        <Router>\n            <Header/>\n            <Switch>\n              <Route path='/' exact >\n                <HomePage />\n              </Route>\n              <Route path='/:code' exact >\n                <CountryPage />\n              </Route>              \n              <Route path='*'>\n                <NotFoundPage />\n              </Route>\n            </Switch>\n        </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}